{"name": "test_user_can_add_product_to_basket", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".alertinner > p > strong\"}\n  (Session info: chrome=137.0.7151.55); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6227FA145+76773]\n\tGetHandleVerifier [0x00007FF6227FA1A0+76864]\n\t(No symbol) [0x00007FF6225B8F7A]\n\t(No symbol) [0x00007FF62260F496]\n\t(No symbol) [0x00007FF62260F74C]\n\t(No symbol) [0x00007FF622662287]\n\t(No symbol) [0x00007FF62263739F]\n\t(No symbol) [0x00007FF62265F0CF]\n\t(No symbol) [0x00007FF622637133]\n\t(No symbol) [0x00007FF6226004D1]\n\t(No symbol) [0x00007FF622601263]\n\tGetHandleVerifier [0x00007FF622ABA8ED+2962317]\n\tGetHandleVerifier [0x00007FF622AB4EC2+2939234]\n\tGetHandleVerifier [0x00007FF622AD2FF3+3062419]\n\tGetHandleVerifier [0x00007FF622814B9A+185914]\n\tGetHandleVerifier [0x00007FF62281C78F+217647]\n\tGetHandleVerifier [0x00007FF622802A44+111844]\n\tGetHandleVerifier [0x00007FF622802BF2+112274]\n\tGetHandleVerifier [0x00007FF6227E8A79+5401]\n\tBaseThreadInitThunk [0x00007FF990957374+20]\n\tRtlUserThreadStart [0x00007FF991E1CC91+33]", "trace": "self = <tests.test_product_page.TestUserAddToBasketFromProductPage object at 0x0000021CDF0D1220>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e723841e3cc6d589fcbcc8597e61cb09\")>\n\n    @pytest.mark.need_review\n    def test_user_can_add_product_to_basket(self, browser):\n        page = ProductPage(\n            browser,\n            'http://selenium1py.pythonanywhere.com/ru'\n            '/catalogue/the-shellcoders-handbook_209/'\n        )\n        page.open()\n        page.add_product_to_cart()\n>       page.should_be_correct_cost()\n\ntest_product_page.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\product_page.py:18: in should_be_correct_cost\n    assert self.browser.find_element(\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:917: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:448: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021CDF0C4470>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...227E8A79+5401]\\\\n\\\\tBaseThreadInitThunk [0x00007FF990957374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF991E1CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".alertinner > p > strong\"}\nE         (Session info: chrome=137.0.7151.55); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6227FA145+76773]\nE       \tGetHandleVerifier [0x00007FF6227FA1A0+76864]\nE       \t(No symbol) [0x00007FF6225B8F7A]\nE       \t(No symbol) [0x00007FF62260F496]\nE       \t(No symbol) [0x00007FF62260F74C]\nE       \t(No symbol) [0x00007FF622662287]\nE       \t(No symbol) [0x00007FF62263739F]\nE       \t(No symbol) [0x00007FF62265F0CF]\nE       \t(No symbol) [0x00007FF622637133]\nE       \t(No symbol) [0x00007FF6226004D1]\nE       \t(No symbol) [0x00007FF622601263]\nE       \tGetHandleVerifier [0x00007FF622ABA8ED+2962317]\nE       \tGetHandleVerifier [0x00007FF622AB4EC2+2939234]\nE       \tGetHandleVerifier [0x00007FF622AD2FF3+3062419]\nE       \tGetHandleVerifier [0x00007FF622814B9A+185914]\nE       \tGetHandleVerifier [0x00007FF62281C78F+217647]\nE       \tGetHandleVerifier [0x00007FF622802A44+111844]\nE       \tGetHandleVerifier [0x00007FF622802BF2+112274]\nE       \tGetHandleVerifier [0x00007FF6227E8A79+5401]\nE       \tBaseThreadInitThunk [0x00007FF990957374+20]\nE       \tRtlUserThreadStart [0x00007FF991E1CC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "attachments": [{"name": "log", "source": "7b493e54-28f8-42c8-9ed9-ac6c0fbce527-attachment.txt", "type": "text/plain"}], "start": 1748794271325, "stop": 1748794277606, "uuid": "4e32a3bc-813c-49f7-8d82-9ebd5a0cbd24", "historyId": "98e7380dbfc189a872bc552f301ce74c", "testCaseId": "98e7380dbfc189a872bc552f301ce74c", "fullName": "test_product_page.TestUserAddToBasketFromProductPage#test_user_can_add_product_to_basket", "labels": [{"name": "tag", "value": "need_review"}, {"name": "tag", "value": "authorized_user"}, {"name": "suite", "value": "test_product_page"}, {"name": "subSuite", "value": "TestUserAddToBasketFromProductPage"}, {"name": "host", "value": "Home"}, {"name": "thread", "value": "14992-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_product_page"}]}